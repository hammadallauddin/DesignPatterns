> Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.

> In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.


> It is like factory pattern but everything is encapsulated
    -> The method that orders the object 
    -> The factories that build the object 
    -> The final object

> Allow you to create families of objects without specifying a concrete class

> Use when you have many objects that can be added, or changed dnamically during runtime.

> You can model anything you can imagine and have those objects interact through common interfaces

> It makes things complicated.
